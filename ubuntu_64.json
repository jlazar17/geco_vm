{
    "variables": {
        "ssh_name": "geco",
        "ssh_pass": "password",
        "hostname": "packer-test"
    },

    "builders": [{
        "type": "virtualbox-iso",
        "guest_os_type": "Ubuntu_64",

        "vboxmanage": [
            ["modifyvm", "{{.Name}}", "--vram", "32"]
        ],

        "disk_size" : 10000,

        "iso_url": "http://releases.ubuntu.com/12.04/ubuntu-12.04.5-server-amd64.iso",
        "iso_checksum": "769474248a3897f4865817446f9a4a53",
        "iso_checksum_type": "md5",

        "http_directory" : "ubuntu_64",
        "http_port_min" : 9001,
        "http_port_max" : 9001,

        "ssh_username": "{{user `ssh_name`}}",
        "ssh_password": "{{user `ssh_pass`}}",
        "ssh_wait_timeout": "20m",

        "shutdown_command": "echo {{user `ssh_pass`}} | sudo -S shutdown -P now",

        "boot_command" : [
            "<esc><esc><enter><wait>",
            "/install/vmlinuz noapic ",
            "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg ",
            "debian-installer=en_US auto locale=en_US kbd-chooser/method=us ",
            "hostname={{user `hostname`}} ",
            "fb=false debconf/frontend=noninteractive ",
            "keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA ",
            "keyboard-configuration/variant=USA console-setup/ask_detect=false ",
            "initrd=/install/initrd.gz -- <enter>"
        ]
    }],
    "provisioners": [{
        "type": "shell",
        "inline": [
            "printf \n\n  DOWNLOADING AUTOTOOLS SCRIPT \n\n",
            "curl -o /build-with-autotools.sh http://{{ .HTTPIP }}:{{ .HTTPPort }}/build-with-autotools.sh"
        ]
    },{
        "type": "shell",
        "inline": [
            "SWIG_VERSION='3.0.8'",
            "FFTW_VERSION='3.3.4'",
            "LAL_VERSION='6.15.0'",
            "LALFRAME_VERSION='1.3.0'",
            "LIBFRAME_VERSION='8.20'",
            "LDAS_TOOLS_VERSION='2.4.1'",
            "NDS2_CLIENT_VERSION='0.10.4'",
            "SWIG_='https://github.com/swig/swig/archive/rel-${SWIG_VERSION}.tar.gz'",
            "FFTW='http://www.fftw.org/fftw-${FFTW_VERSION}.tar.gz'",
            "LDAS_TOOLS='http://software.ligo.org/lscsoft/source/ldas-tools-${LDAS_TOOLS_VERSION}.tar.gz'",
            "LIBFRAME='http://software.ligo.org/lscsoft/source/libframe-${LIBFRAME_VERSION}.tar.gz'",
            "LAL='http://software.ligo.org/lscsoft/source/lalsuite/lal-${LAL_VERSION}.tar.gz'",
            "LALFRAME='http://software.ligo.org/lscsoft/source/lalsuite/lalframe-${LALFRAME_VERSION}.tar.gz'",
            "NDS2_CLIENT='http://software.ligo.org/lscsoft/source/nds2-client-${NDS2_CLIENT_VERSION}.tar.gz'",
            "printf '\n\n  INSTALLING GENERIC PACKAGES \n\n'",
            "apt-get -y install gcc",
            "apt-get -y install gfortran",
            "apt-get -y install python-dev",
            "apt-get -y install libblas-dev",
            "apt-get -y install liblapack-dev",
            "printf '\n\n  INSTALLING LAL DEPENDENCIES \n\n'",
            "apt-get -y install pkg-config",
            "apt-get -y install python-all-dev",
            "apt-get -y install zlib1g-dev",
            "apt-get -y install libgsl0-dev",
            "apt-get -y install swig",
            "apt-get -y install python-numpy",
            "apt-get -y install python-scipy",
            "apt-get -y install bc",
            "printf '\n\n  INSTALLING NDS2 DEPENDENCIES \n\n'",
            "apt-get -y install libsasl2-2",
            "printf '\n\n  INSTALLING GLUE DEPENDENCIES \n\n'",
            "apt-get -y install python-m2crypto",
            "printf '\n\n  INSTALLING MISC PYTHON DEPENDENCIES \n\n'",
            "apt-get -y install texlive-latex-extra",
            "apt-get -y install libhdf5-serial-dev",
            "printf '\n\n  UPDATE PIP \n\n'",
            "pip install -q --upgrade pip",
            "printf '\n\n  BUILD AND INSTALL NUMPY FIRST \n\n'",
            "pip install -q 'numpy>=1.9.1'",
            "printf '\n\n  SET PATHS FOR PKG_CONFIG \n\n'",
            "export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${VIRTUAL_ENV}/lib/pkgconfig",
            "printf '\n\n  BUILD A NEWER VERSION OF SWIG \n\n'",
            "source /build-with-autotools.sh swig-${SWIG_VERSION} ${SWIG_}",
            "printf '\n\n  BUILD FFTW3 (DOUBLE AND FLOAT) \n\n'",
            "source /build-with-autotools.sh fftw-${FFTW_VERSION} ${FFTW} --enable-shared=yes",
            "source /build-with-autotools.sh fftw-${FFTW_VERSION}-float ${FFTW} --enable-shared=yes --enable-float",
            "printf '\n\n  BUILD FRAME LIBRARIES \n\n'",
            "source /build-with-autotools.sh ldas-tools-${LDAS_TOOLS_VERSION} ${LDAS_TOOLS}",
            "source /build-with-autotools.sh libframe-${LIBFRAME_VERSION} ${LIBFRAME}",
            "printf '\n\n  BUILD LAL PACKAGES \n\n'",
            "source /build-with-autotools.sh lal-${LAL_VERSION} ${LAL} --enable-swig-python",
            "source /build-with-autotools.sh lalframe-${LALFRAME_VERSION} ${LALFRAME} --enable-swig-python",
            "printf '\n\n  BUILD NDS2 CLIENT \n\n'",
            "source /build-with-autotools.sh nds2-client-${NDS2_CLIENT_VERSION} ${NDS2_CLIENT} --disable-swig-java --disable-mex-matlab",
            "printf '\n\n  INSTALL CYTHON TO SPEED UP SCIPY BUILD \n\n'",
            "pip install -q --install-option='--no-cython-compile' Cython",
            "printf '\n\n  INSTALL TESTING DEPENDENCIES \n\n'",
            "pip install -q coveralls 'pytest>=2.8' unittest2"
        ]
    }]
}
